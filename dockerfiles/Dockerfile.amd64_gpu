FROM c3sr/base:amd64-gpu-latest
MAINTAINER Yen-Hsiang Chang <yhchang3@illinois.edu>

# Build-time metadata as defined at http://label-schema.org
ARG BUILD_DATE
ARG VCS_REF
ARG VCS_URL
ARG VERSION
ARG ARCH
ARG FRAMEWORK_VERSION
LABEL org.carml.go-mxnet.build-date=$BUILD_DATE \
  org.carml.go-mxnet.name="go-mxnet bindings for go" \
  org.carml.go-mxnet.description="" \
  org.carml.go-mxnet.url="https://www.carml.org/" \
  org.carml.go-mxnet.vcs-ref=$VCS_REF \
  org.carml.go-mxnet.vcs-url=$VCS_URL \
  org.carml.go-mxnet.vendor="MLModelScope" \
  org.carml.go-mxnet.arch=$ARCH \
  org.carml.go-mxnet.version=$VERSION \
  org.carml.go-mxnet.framework_version=$FRAMEWORK_VERSION \
  org.carml.go-mxnet.schema-version="1.0"

########## INSTALLATION STEPS ###################
ENV DEBIAN_FRONTEND=noninteractive
ENV LD_LIBRARY_PATH /usr/local/cuda/lib64/stubs:$LD_LIBRARY_PATH

RUN apt-get update && apt-get install -y libssl-dev libopencv-dev tzdata ninja-build && \
    rm -rf /var/lib/apt/lists/*

RUN ln -fs /usr/share/zoneinfo/America/Chicago /etc/localtime && \
  dpkg-reconfigure --frontend noninteractive tzdata

RUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1

WORKDIR /

### Update cmake version ###
RUN wget https://github.com/Kitware/CMake/releases/download/v3.19.2/cmake-3.19.2.tar.gz && \
  tar -xzvf cmake-3.19.2.tar.gz && \
  cd cmake-3.19.2 && \
  ./bootstrap && make && make install && \
  cd .. && rm -fr cmake-3.19.2* && cmake --version

RUN git clone --single-branch --depth 1 --branch $FRAMEWORK_VERSION --recursive https://github.com/apache/incubator-mxnet mxnet

RUN cd mxnet && \
    mkdir -p /opt/mxnet && \
    mkdir build && cd build && \
    cmake -DUSE_CUDA=1 \
    -DMXNET_CUDA_ARCH="5.2 6.0 6.1 7.0 7.5+PTX" \
    -DUSE_CUDA_PATH=/usr/local/cuda \
    -DUSE_CUDNN=1 -DUSE_CPP_PACKAGE=1 -GNinja .. && \
    ninja -v && \
    cp -r ../include /opt/mxnet/ && \
    cp -r lib /opt/mxnet/ && \
    cd / && \
    rm -fr mxnet

ENV LD_LIBRARY_PATH /opt/mxnet/lib:$LD_LIBRARY_PATH
ENV LIBRARY_PATH /opt/mxnet/lib:$LIBRARY_PATH

# Get Go bindings
ENV PKG github.com/c3sr/go-mxnet
WORKDIR $GOPATH/src/$PKG

RUN git clone --depth=1 https://${PKG}.git . 

RUN dep ensure -v -vendor-only

RUN go install -a -installsuffix cgo -ldflags "-s -w -X ${PKG}/Version=${VERSION} -X ${PKG}/GitCommit=${VCS_REF} -X ${PKG}/BuildDate=${BUILD_DATE}"&& \
    rm -fr vendor
